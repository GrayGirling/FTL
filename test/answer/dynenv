set data [ads=3,b=9]
set dgetall []:{echo "(getall)"!;data}
set dget [n]:{echo "(get)"!;data.(n)}
set dset [n,v]:{echo "(set)"!;data.(n)=v;TRUE}
set dcount []:{echo "(count)"!;len data!}
set dyn dynenv dgetall dcount dset dget!
set dyn2 dynenv dgetall NULL dset dget!
set dynr dynenv dgetall dcount NULL dget!
set dynw dynenv dgetall dcount dset NULL!
eval dyn
(getall)
len dyn
[ads=3, b=9]
(count)
set dyn2.ads 77
2
(set)
set dyn2.b 88
(set)
eval dyn2.ads
(get)
eval dyn2.b
77
(get)
eval dyn2
88
(getall)
eval dyn2
[ads=77, b=88]
(getall)
len dyn2
[ads=77, b=88]
(getall)
set dyn2.ads 8
2
(set)
set dyn2.b 100
(set)
eval dyn2.ads
(get)
eval dyn2.b
8
(get)
eval dyn2
100
(getall)
eval dynr
[ads=8, b=100]
(getall)
len dynr
[ads=8, b=100]
(count)
set dynr.ads 10
ftl: name "ads" has a constant value
ftl $*console*:31: can't set a value for "ads" here
set dynr.b 120
ftl: name "b" has a constant value
ftl $*console*:32: can't set a value for "b" here
eval dynr.ads
2
(get)
eval dynr.b
8
(get)
eval dynr
100
(getall)
eval dynw
[ads=8, b=100]
(getall)
len dynw
[ads=8, b=100]
(count)
set dynw.ads 33
2
(set)
set dynw.b 44
(set)
eval dynw.ads
(getall)
eval dynw.b
33
(getall)
eval dynw
44
(getall)
[ads=33, b=44]
