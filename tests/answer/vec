> eval <>
<>
> eval <100>
<100>
> eval <1000,2000>
<1000, 2000>
> eval <"a">
<"a">
> 
> eval <1,2,7=9>
<1, 2, 7=9>
> eval <5=9,10, 11>
<5=9, 10, 11>
> eval <3=3,7=7>
<3=3, 7=7>
> 
> eval <"a"=4> # error
ftl: names in a vector must be an integer not a string
ftl $*console*:+10 in
ftl $*console*:11: expected '>'
ftl $*console*:+10: failed to evaluate expression
ftl $*console*:+10: warning - trailing text ...4> 
> 
> eval <10..13>
<10 .. 13>
> intseq 10 NULL 13
<10 .. 13>
> eval <13..10>
<13 .. 10>
> intseq 13 NULL 10
<13 .. 10>
> eval <4, 7 .. 23>
<4, 7 .. 23>
> intseq 4 7 23
<4, 11 .. 23>
> eval <1..>
<1 .. 134217727>
> intseq 1 NULL NULL
<1 .. 134217727>
> eval <..>
<1 .. 134217727>
> intseq NULL NULL NULL
<1 .. 134217727>
> eval <1, 0 ..>
<1 .. -134217727>
> intseq 1 0 NULL     # bug?
<1 .. 1>
> eval <..8>
<1 .. 8>
> intseq NULL NULL 8
<1 .. 8>
> 
> # impossible sequences just return nothing
> eval <4, 2 .. 12>
<4, 2 .. 12>
> intseq 4 2 12
<4, 6 .. 12>
> eval <4, 8 .. -12>
<4, 8 .. -12>
> intseq 4 8 (-12)
<4, 12 .. -12>
> 
> equal NULL (typeof <4, 2 .. 12>!) # TRUE
FALSE
> equal (type "dir"!) (typeof <>!)   # TRUE
TRUE
> len <4, 8 .. -12> # error
0
> 
> len <>
0
> len <1,2,7=9>
3
> len <5=9,10, 11>
3
> len <3=3,7=7>
2
> len <10..13>
4
> len <13..10>
4
> len <4, 7 .. 23>
7
> # len <1..> # - bad idea .. takes a long time
> 
> set v <..10>
> set v.(len v!) 11
ftl: name 10 has a constant value
ftl $*console*:+47 in
ftl $*console*:48: can't set a value for 10 here
> eval v
<1 .. 10>
> 
> eval <>.0    # undefined
ftl $*console*:+50 in
ftl $*console*:51: index symbol undefined in parent '0'
ftl $*console*:+50: failed to evaluate expression
> eval <>.(-1) # undefined
ftl $*console*:+51 in
ftl $*console*:52: index symbol undefined in parent '-1'
ftl $*console*:+51: failed to evaluate expression
> eval <>.1    # undefined
ftl $*console*:+52 in
ftl $*console*:53: index symbol undefined in parent '1'
ftl $*console*:+52: failed to evaluate expression
> 
> eval <42>.0   
42
> eval <42>.(-1) # undefined
ftl $*console*:+55 in
ftl $*console*:56: index symbol undefined in parent '-1'
ftl $*console*:+55: failed to evaluate expression
> eval <42>.1    # undefined
ftl $*console*:+56 in
ftl $*console*:57: index symbol undefined in parent '1'
ftl $*console*:+56: failed to evaluate expression
> 
> eval <3=33,7=77>.2 # undefined
ftl $*console*:+58 in
ftl $*console*:59: index symbol undefined in parent '2'
ftl $*console*:+58: failed to evaluate expression
> eval <3=33,7=77>.3
33
> eval <3=33,7=77>.4 # undefined
ftl $*console*:+60 in
ftl $*console*:61: index symbol undefined in parent '4'
ftl $*console*:+60: failed to evaluate expression
> eval <3=33,7=77>.7
77
> eval <3=33,7=77>.8 # undefined
ftl $*console*:+62 in
ftl $*console*:63: index symbol undefined in parent '8'
ftl $*console*:+62: failed to evaluate expression
> 
> eval <4, 8 .. 23>.0
4
> eval <4, 8 .. 23>.1
8
> eval <4, 8 .. 23>.2
12
> eval <4, 8 .. 23>.3
16
> eval <4, 8 .. 23>.4
20
> eval <4, 8 .. 23>.5 # undefined
ftl $*console*:+69 in
ftl $*console*:70: index symbol undefined in parent '5'
ftl $*console*:+69: failed to evaluate expression
> eval <4, 8 .. 24>.5 
24
> 
> # new features from v1.28
> 
> eval <-1=0>
<-1=0>
> eval <999999999=0> # no longer takes forever
<999999999=0>
> eval <-999999999=0>
<-999999999=0>
> eval <-2=1, 0=2> # index comparison parse fix
<-2=1, 0=2>
> eval <-10=1, 20=2, 60=3, 130=4> # multiple expansions
<-10=1, 20=2, 60=3, 130=4>
> 
> eval [0=1, 1=2, 2=3]
[0=1,1=2,2=3]
> eval [0=1, 1=2, 2]
[0=1,1=2, 2]
> eval [0=1, 1=2, 2] 3
[2=3,0=1,1=2]
> 
> set myadd[1,2]:{ .1 + .2 }
> myadd 30 12
42
> eval myadd 4
[2]:{ .1 + .2 }
> 
> set f [1,2]:{ echo "${.1} - ${.2}"! }
> f "first" "rest"
first - rest
> 
> 